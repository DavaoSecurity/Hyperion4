# Hyperion v4 Exploit suggester by Nathan W Jones nat@davaosecurity.com
# pip3 subprocess html      chmod this file  python exploitsuggest.py        results will be saved in portscanresults.html
# run as root

import subprocess
import html
import os

def scan_ports(target):
    # Scan TCP and UDP ports using Nmap
    print(f"Scanning {target} for open TCP and UDP ports...")
    tcp_scan = subprocess.run(['nmap', '-sT', target], capture_output=True, text=True)
    udp_scan = subprocess.run(['nmap', '-sU', target], capture_output=True, text=True)

    return tcp_scan.stdout, udp_scan.stdout

def suggest_exploits(open_ports):
    exploits = {}
    for port in open_ports:
        # Use Metasploit to find exploits for the open port
        print(f"Searching for exploits for port {port}...")
        msf_command = f"search port:{port}"
        result = subprocess.run(['msfconsole', '-q', '-x', msf_command], capture_output=True, text=True)
        exploits[port] = result.stdout.strip().splitlines()

    return exploits

def save_results_to_html(target, tcp_results, udp_results, exploits):
    # Create an HTML file to save the results
    html_content = f"<html><head><title>Port Scan Results for {html.escape(target)}</title></head><body>"
    html_content += f"<h1>Port Scan Results for {html.escape(target)}</h1>"

    html_content += "<h2>Open TCP Ports</h2><pre>" + html.escape(tcp_results) + "</pre>"
    html_content += "<h2>Open UDP Ports</h2><pre>" + html.escape(udp_results) + "</pre>"

    html_content += "<h2>Suggested Exploits</h2><ul>"
    for port, exploits_list in exploits.items():
        html_content += f"<li>Port {port}:<ul>"
        for exploit in exploits_list:
            html_content += f"<li>{html.escape(exploit)}</li>"
        html_content += "</ul></li>"
    html_content += "</ul></body></html>"

    with open('portscanresults.html', 'w') as f:
        f.write(html_content)

    print("Results saved to portscanresults.html")

def main():
    target = input("Enter the target IP or hostname: ")
    tcp_results, udp_results = scan_ports(target)

    # Extract open ports from the scan results
    open_ports = []
    for line in tcp_results.splitlines() + udp_results.splitlines():
        if "open" in line:
            port_info = line.split('/')[0].strip()
            open_ports.append(port_info)

    exploits = suggest_exploits(open_ports)
    save_results_to_html(target, tcp_results, udp_results, exploits)

if __name__ == "__main__":
    main()
